
WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }

value = _{ string | number }

string = ${ "\"" ~ inner ~ "\"" }
inner = @{ char* }
char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

number = @{
    "-"?
    ~ ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)
    ~ ("." ~ ASCII_DIGIT*)?
    ~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+)?
}

token = _{ ASCII_ALPHA ~ ( ASCII_ALPHA | ASCII_DIGIT | "_" )* }
token_2 =_{ ( ASCII_ALPHA | ASCII_DIGIT | "_" )* } 

format_identifier = @{ ":" ~ token }
anchor_identifier = @{ "@" ~ token }
variable_identifier = @{ "$" ~ token ~ ("." ~ token_2 )* }

expression = { (variable_identifier | value) }

expr       =   { prefix? ~ primary ~ (infix ~ prefix? ~ primary )* }

infix    =  _{ add | sub | mul | div }
add    =   { "+" } // Addition
sub    =   { "-" } // Subtraction
mul    =   { "*" } // Multiplication
div    =   { "/" } // Division

prefix   =  _{ neg }
neg    =   { "-" } // Negation

primary  =  _{ expression | "(" ~ expr ~ ")" }

modifier_statement = { token }

format_declaration = { format_identifier ~ "{" ~ (format_modifier ~ ",")* ~ format_modifier? ~ "}" }

format_modifier = { modifier_statement ~ ("(" ~ expr ~ ")")? }

sheet_identifier = { string }

sheet = { "sheet" ~ "(" ~ sheet_identifier ~ ")" }

anchor = { "anchor" ~ "(" ~ anchor_identifier ~ ")" }

mover_x = { number }
mover_y = { number }

mover = { "move" ~ "(" ~ (anchor_identifier ~ ",")? ~ mover_x ~ "," ~ mover_y ~ ")" }
cr = { "cr" }
autofit = { "autofit" }

width_unit = @{ ( "chars" | "pixels" ) }

column = { "col" ~ "(" ~ number ~ "," ~ number ~ "," ~ width_unit ~ "(" ~ number ~ ")" ~ ")" }
rowspec = { "row" ~ "(" ~ number ~ "," ~ width_unit ~ "(" ~ number ~ ")" ~ ")" }

body = _{ (for_loop | anchor | mover | cr | autofit | column | row | rowspec)* }

row = { "[" ~ cell ~ ("," ~ cell)* ~ "]" }

cell_type = { ("num" | "str" | "date" | "img") }

colspan = { "," ~ "colspan" ~ "(" ~ number ~ ")" }
rowspan = { "," ~ "rowspan" ~ "(" ~ number ~ ")" }

image_mode = @{ ( "embed" | "insert" ) }

cell = { cell_type ~ "(" ~ expr ~ ("," ~ format_identifier)? ~ ("," ~ image_mode)? ~ colspan? ~ rowspan? ~ ")" }

for_loop = { "for" ~ variable_identifier ~ "in" ~ expression ~ "{" ~ body ~ "}" }  

main = _{
 SOI
 ~ format_declaration*
 ~ (sheet ~ body)*
 ~ EOI
}


